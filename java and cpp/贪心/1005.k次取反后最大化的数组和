/*给定一个整数数组 A，我们只能用以下方法修改该数组：我们选择某个个索引 i 并将 A[i] 替换为 -A[i]，然后总共重复这个过程 K 次。
（我们可以多次选择同一个索引 i。）
以这种方式修改数组后，返回数组可能的最大和。
来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximize-sum-of-array-after-k-negations
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。*/

class Solution {
public:
    int largestSumAfterKNegations(vector<int>& A, int k) {
        sort(A.begin(),A.end());
        int pos=0;
        while(k>0){
            if(A[pos]<0){
                A[pos]=-A[pos];
                if(A[pos]>A[pos+1])
                    pos++;
            }
            else if(A[pos]>0){
                if(k%2!=0){
                    A[pos]=-A[pos];
                }
                k=0;
            }
            k--;
        }
        int sum=0;
        for(int i=0; i<A.size(); i++){
            sum+=A[i];
        }
        return sum;
    }
};
